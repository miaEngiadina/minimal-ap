#+TITLE: A minimal ActivityPub server

A minimal ActivityPub server intended for demonstrating use-cases of ActivityPub and experimenting with ideas.

* Starting it

Prerequisites:

- [[https://www.gnu.org/software/guile/][GNU Guile]]
- [[https://github.com/aconchillo/guile-json][guile-json]]

All prerequisites can be installed via [[https://guix.gnu.org/][GNU Guix]].

#+BEGIN_SRC sh
guix environment -l guix.scm
./pre-inst-env guile main.scm
#+END_SRC

* Quick tour
** Actor

Actor objects can be retrieved with a GET request to the ~/actors/actor-name~ endpoint.

For example we can retrieve the actor object for Alice:

#+BEGIN_SRC restclient
GET http://localhost:8080/actors/alice
#+END_SRC

#+RESULTS:
#+BEGIN_SRC js
{
  "@context": "https://www.w3.org/ns/activitystreams",
  "id": "http://localhost:8080/actors/alice",
  "name": "Alice",
  "type": "Person",
  "inbox": "http://localhost:8080/actors/alice/inbox",
  "outbox": "http://localhost:8080/actors/alice/outbox",
  "liked": "http://localhost:8080/actors/alice/liked"
}
// GET http://localhost:8080/actors/alice
// HTTP/1.1 200 OK
// Content-Length: 280
// Content-Type: application/json;charset=utf-8
// Access-Control-Allow-Origin: *
// Access-Control-Allow-Headers: Authorization, Content-type
// Access-Control-Allow-Methods: GET, POST
// Request duration: 0.002164s
#+END_SRC

*** Inbox
We can retrieve Alice's inbox (which is currently empty):

#+BEGIN_SRC restclient
GET http://localhost:8080/actors/alice/inbox
#+END_SRC

#+RESULTS:
#+BEGIN_SRC js
{
  "@context": "https://www.w3.org/ns/activitystreams",
  "id": "http://localhost:8080/actors/alice/inbox",
  "type": "Collection",
  "totalItems": 0,
  "items": []
}
// GET http://localhost:8080/actors/alice/inbox
// HTTP/1.1 200 OK
// Content-Length: 146
// Content-Type: application/json;charset=utf-8
// Access-Control-Allow-Origin: *
// Access-Control-Allow-Headers: Authorization, Content-type
// Access-Control-Allow-Methods: GET, POST
// Request duration: 0.002156s
#+END_SRC

*** Outbox

We can also retrieve Alice's outbox (also still empty):

#+BEGIN_SRC restclient
GET http://localhost:8080/actors/alice/outbox
#+END_SRC

#+RESULTS:
#+BEGIN_SRC js
{
  "@context": "https://www.w3.org/ns/activitystreams",
  "id": "http://localhost:8080/actors/alice/outbox",
  "type": "Collection",
  "totalItems": 0,
  "items": []
}
// GET http://localhost:8080/actors/alice/outbox
// HTTP/1.1 200 OK
// Content-Length: 147
// Content-Type: application/json;charset=utf-8
// Access-Control-Allow-Origin: *
// Access-Control-Allow-Headers: Authorization, Content-type
// Access-Control-Allow-Methods: GET, POST
// Request duration: 0.002070s
#+END_SRC
** Posting an activity
Alice can post a note by making a ~POST~ request to her outbox.

For example she can post a very simple note (addressed to Bob and the special public collection):
#+BEGIN_SRC restclient
POST http://localhost:8080/actors/alice/outbox
Content-type: application/json
{
  "type": "Create",
  "to": [ "http://localhost:8080/actors/bob",
          "https://www.w3.org/ns/activitystreams#Public"],
  "object": {
    "content": "Hello World!",
    "type": "Note"
  }
}
#+END_SRC

#+RESULTS:
#+BEGIN_SRC js
{
  "@context": "https://www.w3.org/ns/activitystreams",
  "id": "http://localhost:8080/objects/1",
  "type": "Create",
  "published": "2019-09-25T10:52:06+0200",
  "actor": "http://localhost:8080/actors/alice",
  "object": {
    "id": "http://localhost:8080/objects/2",
    "type": "Note",
    "content": "Hello World!"
  },
  "to": [
    "http://localhost:8080/actors/bob",
    "https://www.w3.org/ns/activitystreams#Public"
  ]
}
// POST http://localhost:8080/actors/alice/outbox
// HTTP/1.1 200 OK
// Content-Length: 369
// Content-Type: application/json;charset=utf-8
// Access-Control-Allow-Origin: *
// Access-Control-Allow-Headers: Authorization, Content-type
// Access-Control-Allow-Methods: GET, POST
// Request duration: 0.001562s
#+END_SRC

Note that the note was wrapped in a create activity and attributed to Alice.

The activity is now placed in Alice's outbox:

#+BEGIN_SRC restclient
GET http://localhost:8080/actors/alice/outbox
#+END_SRC

#+RESULTS:
#+BEGIN_SRC js
{
  "@context": "https://www.w3.org/ns/activitystreams",
  "id": "http://localhost:8080/actors/alice/outbox",
  "type": "Collection",
  "totalItems": 1,
  "items": [
    {
      "id": "http://localhost:8080/objects/1",
      "type": "Create",
      "published": "2019-09-25T10:52:06+0200",
      "actor": "http://localhost:8080/actors/alice",
      "object": {
        "id": "http://localhost:8080/objects/2",
        "type": "Note",
        "content": "Hello World!"
      },
      "to": [
        "http://localhost:8080/actors/bob",
        "https://www.w3.org/ns/activitystreams#Public"
      ]
    }
  ]
}
// GET http://localhost:8080/actors/alice/outbox
// HTTP/1.1 200 OK
// Content-Length: 465
// Content-Type: application/json;charset=utf-8
// Access-Control-Allow-Origin: *
// Access-Control-Allow-Headers: Authorization, Content-type
// Access-Control-Allow-Methods: GET, POST
// Request duration: 0.001952s
#+END_SRC

In Bob's inbox:

#+BEGIN_SRC restclient
GET http://localhost:8080/actors/bob/inbox
#+END_SRC

#+RESULTS:
#+BEGIN_SRC js
{
  "@context": "https://www.w3.org/ns/activitystreams",
  "id": "http://localhost:8080/actors/bob/inbox",
  "type": "Collection",
  "totalItems": 1,
  "items": [
    {
      "id": "http://localhost:8080/objects/1",
      "type": "Create",
      "published": "2019-09-25T10:52:06+0200",
      "actor": "http://localhost:8080/actors/alice",
      "object": {
        "id": "http://localhost:8080/objects/2",
        "type": "Note",
        "content": "Hello World!"
      },
      "to": [
        "http://localhost:8080/actors/bob",
        "https://www.w3.org/ns/activitystreams#Public"
      ]
    }
  ]
}
// GET http://localhost:8080/actors/bob/inbox
// HTTP/1.1 200 OK
// Content-Length: 462
// Content-Type: application/json;charset=utf-8
// Access-Control-Allow-Origin: *
// Access-Control-Allow-Headers: Authorization, Content-type
// Access-Control-Allow-Methods: GET, POST
// Request duration: 0.001919s
#+END_SRC

And also in the special public collection:

#+BEGIN_SRC restclient
GET http://localhost:8080/public
#+END_SRC

#+RESULTS:
#+BEGIN_SRC js
{
  "@context": "https://www.w3.org/ns/activitystreams",
  "id": "https://www.w3.org/ns/activitystreams#Public",
  "type": "Collection",
  "totalItems": 1,
  "items": [
    {
      "id": "http://localhost:8080/objects/1",
      "type": "Create",
      "published": "2019-09-25T10:52:06+0200",
      "actor": "http://localhost:8080/actors/alice",
      "object": {
        "id": "http://localhost:8080/objects/2",
        "type": "Note",
        "content": "Hello World!"
      },
      "to": [
        "http://localhost:8080/actors/bob",
        "https://www.w3.org/ns/activitystreams#Public"
      ]
    }
  ]
}
// GET http://localhost:8080/public
// HTTP/1.1 200 OK
// Content-Length: 468
// Content-Type: application/json;charset=utf-8
// Access-Control-Allow-Origin: *
// Access-Control-Allow-Headers: Authorization, Content-type
// Access-Control-Allow-Methods: GET, POST
// Request duration: 0.002152s
#+END_SRC
