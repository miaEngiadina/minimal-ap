#+TITLE: A minimal ActivityPub server

A minimal ActivityPub server intended for demonstrating use-cases of ActivityPub and experimenting with ideas.

* Quick tour
** Actor

Actor objects can be retrieved with a GET request to the ~/actors/actor-name~ endpoint.

For example we can retrieve the actor object for Alice:

#+BEGIN_SRC restclient
GET http://localhost:8080/actors/alice
#+END_SRC

#+RESULTS:
#+BEGIN_SRC js
{
  "id": "http://localhost:8080/actors/alice",
  "name": "Alice",
  "type": "Person",
  "inbox": "http://localhost:8080/actors/alice/inbox",
  "outbox": "http://localhost:8080/actors/alice/outbox"
}
// GET http://localhost:8080/actors/alice
// HTTP/1.1 200 OK
// Content-Length: 178
// Content-Type: application/json;charset=utf-8
// Request duration: 0.001513s
#+END_SRC

*** Inbox
We can retrieve Alice's inbox (which is currently empty):

#+BEGIN_SRC restclient
GET http://localhost:8080/actors/alice/inbox
#+END_SRC

#+RESULTS:
#+BEGIN_SRC js
{
  "type": "OrderedCollection",
  "totalItems": 0,
  "orderedItems": []
}
// GET http://localhost:8080/actors/alice/inbox
// HTTP/1.1 200 OK
// Content-Length: 61
// Content-Type: application/json;charset=utf-8
// Request duration: 0.002446s
#+END_SRC
*** Outbox
We can also retrieve Alice's outbox (also still empty):

#+BEGIN_SRC restclient
GET http://localhost:8080/actors/alice/outbox
#+END_SRC

#+RESULTS:
#+BEGIN_SRC js
{
  "type": "OrderedCollection",
  "totalItems": 2,
  "orderedItems": [
    {
      "id": "no-id",
      "type": "Create",
      "actor": "http://localhost:8080/actors/alice",
      "object": {
        "type": "Note",
        "content": "Hello World!"
      }
    },
    {
      "id": "no-id",
      "type": "Create",
      "actor": "http://localhost:8080/actors/alice",
      "object": {
        "type": "Note",
        "content": "Hello World!"
      }
    }
  ]
}
// GET http://localhost:8080/actors/alice/outbox
// HTTP/1.1 200 OK
// Content-Length: 312
// Content-Type: application/json;charset=utf-8
// Request duration: 0.001488s
#+END_SRC
** Posting an activity
Alice can post a note by making a ~POST~ request to her outbox.

For example she can post a very simple note (addressed to Bob):
#+BEGIN_SRC restclient
POST http://localhost:8080/actors/alice/outbox
Content-type: application/json
{
  "type": "Create",
  "to": [ "http://localhost:8080/actors/bob" ],
  "object": {
    "content": "Hello World!",
    "type": "Anything"
  }
}
#+END_SRC

#+RESULTS:
#+BEGIN_SRC js
{
  "id": "http://localhost:8080/objects/7",
  "type": "Create",
  "actor": "http://localhost:8080/actors/alice",
  "object": {
    "type": "Anything",
    "content": "Hello World!"
  },
  "to": [
    "http://localhost:8080/actors/bob"
  ]
}
// POST http://localhost:8080/actors/alice/outbox
// HTTP/1.1 200 OK
// Content-Length: 197
// Content-Type: application/json;charset=utf-8
// Request duration: 0.001091s
#+END_SRC

Note that the note was wrapped in a create activity and attributed to Alice.

The activity is now placed in Alice's outbox:

#+BEGIN_SRC restclient
GET http://localhost:8080/actors/alice/outbox
#+END_SRC

#+RESULTS:
#+BEGIN_SRC js
{
  "type": "OrderedCollection",
  "totalItems": 1,
  "orderedItems": [
    {
      "id": "http://localhost:8080/objects/7",
      "type": "Create",
      "actor": "http://localhost:8080/actors/alice",
      "object": {
        "type": "Anything",
        "content": "Hello World!"
      },
      "to": [
        "http://localhost:8080/actors/bob"
      ]
    }
  ]
}
// GET http://localhost:8080/actors/alice/outbox
// HTTP/1.1 200 OK
// Content-Length: 258
// Content-Type: application/json;charset=utf-8
// Request duration: 0.001528s
#+END_SRC

And in Bob's inbox:

#+BEGIN_SRC restclient
GET http://localhost:8080/actors/bob/inbox
#+END_SRC

#+RESULTS:
#+BEGIN_SRC js
{
  "type": "OrderedCollection",
  "totalItems": 1,
  "orderedItems": [
    {
      "id": "http://localhost:8080/objects/7",
      "type": "Create",
      "actor": "http://localhost:8080/actors/alice",
      "object": {
        "type": "Anything",
        "content": "Hello World!"
      },
      "to": [
        "http://localhost:8080/actors/bob"
      ]
    }
  ]
}
// GET http://localhost:8080/actors/bob/inbox
// HTTP/1.1 200 OK
// Content-Length: 258
// Content-Type: application/json;charset=utf-8
// Request duration: 0.002323s
#+END_SRC
